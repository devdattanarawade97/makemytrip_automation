/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/7.6/userguide/multi_project_builds.html
 */
 import com.gradle.scan.plugin.PublishedBuildScan
import com.gradle.scan.plugin.BuildResult

/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/7.6/userguide/multi_project_builds.html
 */

plugins {
    id "com.gradle.enterprise" version "3.12.2"
}

gradleEnterprise {
     //configuration
    buildScan {
        uploadInBackground = false
        captureTaskInputFiles = true
         if (System.getenv("CI")) {
            tag "CI"
        } else {
            tag "Local"
        }

         buildScanPublished { PublishedBuildScan scan ->
            file("scan-journal.log") << "${new Date()} - ${scan.buildScanId} - ${scan.buildScanUri}\n"

        // value "Build Number : ", project.buildNumber
        }
    
    buildFinished { BuildResult result ->
            if (result.failure) {
                value "Failed with", result.failure.message
                
        
            }
        }
  
    


        
     termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
     // publishOnFailure()
        publishAlways()
          capture {
          buildLogging = true
          testLogging = true
          } 
          
           obfuscation {
            ipAddresses { addresses -> addresses.collect { address -> "0.0.0.0" } }
            hostname { host -> host.collect { character -> Character.getNumericValue(character as char) }.join("-") }
            username { name -> "Dev"}
        }
    }   

}




rootProject.name = 'makemytrip'
include('app')
